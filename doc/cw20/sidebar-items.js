window.SIDEBAR_ITEMS = {"enum":[["Balance",""],["Cw20ExecuteMsg",""],["Cw20QueryMsg",""],["Denom",""],["EmbeddedLogo","This is used to store the logo on the blockchain in an accepted format. Enforce maximum size of 5KB on all variants."],["Expiration","Expiration represents a point in time when some event happens. It can compare with a BlockInfo and will return is_expired() == true once the condition is hit (and for every block in the future)"],["Logo","This is used for uploading logo data, or setting it in InstantiateData"],["LogoInfo","This is used to display logo info, provide a link or inform there is one that can be downloaded from the blockchain itself"]],"struct":[["AllAccountsResponse",""],["AllAllowancesResponse",""],["AllowanceInfo",""],["AllowanceResponse",""],["BalanceResponse",""],["Cw20Coin",""],["Cw20CoinVerified",""],["Cw20Contract","Cw20Contract is a wrapper around Addr that provides a lot of helpers for working with this."],["Cw20ReceiveMsg","Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg"],["DownloadLogoResponse","When we download an embedded logo, we get this response type. We expect a SPA to be able to accept this info and display it."],["MarketingInfoResponse",""],["MinterResponse",""],["TokenInfoResponse",""]]};