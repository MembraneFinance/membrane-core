{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "base_debt_cap_multiplier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "collateral_twap_timeframe": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "cpc_margin_of_error": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "credit_twap_timeframe": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "debt_auction": {
              "type": [
                "string",
                "null"
              ]
            },
            "debt_minimum": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dex_router": {
              "type": [
                "string",
                "null"
              ]
            },
            "interest_revenue_collector": {
              "type": [
                "string",
                "null"
              ]
            },
            "liq_fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "liquidity_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "oracle_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "oracle_time_limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "osmosis_proxy": {
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            },
            "rate_slope_multiplier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "stability_pool": {
              "type": [
                "string",
                "null"
              ]
            },
            "staking_contract": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "type": "object",
          "required": [
            "basket_id"
          ],
          "properties": {
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_id": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "position_owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "increase_debt"
      ],
      "properties": {
        "increase_debt": {
          "type": "object",
          "required": [
            "amount",
            "basket_id",
            "position_id"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object",
          "required": [
            "assets",
            "basket_id",
            "position_id"
          ],
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              }
            },
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "repay"
      ],
      "properties": {
        "repay": {
          "type": "object",
          "required": [
            "basket_id",
            "position_id"
          ],
          "properties": {
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "liq_repay"
      ],
      "properties": {
        "liq_repay": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "liquidate"
      ],
      "properties": {
        "liquidate": {
          "type": "object",
          "required": [
            "basket_id",
            "position_id",
            "position_owner"
          ],
          "properties": {
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_id": {
              "$ref": "#/definitions/Uint128"
            },
            "position_owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mint_revenue"
      ],
      "properties": {
        "mint_revenue": {
          "type": "object",
          "required": [
            "basket_id"
          ],
          "properties": {
            "amount": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "repay_for": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UserInfo"
                },
                {
                  "type": "null"
                }
              ]
            },
            "send_to": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_basket"
      ],
      "properties": {
        "create_basket": {
          "type": "object",
          "required": [
            "collateral_types",
            "credit_asset",
            "credit_pool_ids",
            "credit_price"
          ],
          "properties": {
            "base_interest_rate": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "collateral_types": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cAsset"
              }
            },
            "credit_asset": {
              "$ref": "#/definitions/Asset"
            },
            "credit_pool_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "credit_price": {
              "$ref": "#/definitions/Decimal"
            },
            "desired_debt_cap_util": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "liq_queue": {
              "type": [
                "string",
                "null"
              ]
            },
            "liquidity_multiplier_for_debt_caps": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_basket"
      ],
      "properties": {
        "edit_basket": {
          "type": "object",
          "required": [
            "basket_id"
          ],
          "properties": {
            "added_cAsset": {
              "anyOf": [
                {
                  "$ref": "#/definitions/cAsset"
                },
                {
                  "type": "null"
                }
              ]
            },
            "base_interest_rate": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "collateral_supply_caps": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/SupplyCap"
              }
            },
            "credit_asset_twap_price_source": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TWAPPoolInfo"
                },
                {
                  "type": "null"
                }
              ]
            },
            "credit_pool_ids": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "desired_debt_cap_util": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "liq_queue": {
              "type": [
                "string",
                "null"
              ]
            },
            "liquidity_multiplier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "negative_rates": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "clone_basket"
      ],
      "properties": {
        "clone_basket": {
          "type": "object",
          "required": [
            "basket_id"
          ],
          "properties": {
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "editc_asset"
      ],
      "properties": {
        "editc_asset": {
          "type": "object",
          "required": [
            "asset",
            "basket_id"
          ],
          "properties": {
            "asset": {
              "$ref": "#/definitions/AssetInfo"
            },
            "basket_id": {
              "$ref": "#/definitions/Uint128"
            },
            "max_LTV": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "max_borrow_LTV": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_admin"
      ],
      "properties": {
        "edit_admin": {
          "type": "object",
          "required": [
            "owner"
          ],
          "properties": {
            "owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "$ref": "#/definitions/CallbackMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "info"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        }
      }
    },
    "AssetInfo": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "CallbackMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "bad_debt_check"
          ],
          "properties": {
            "bad_debt_check": {
              "type": "object",
              "required": [
                "basket_id",
                "position_id",
                "position_owner"
              ],
              "properties": {
                "basket_id": {
                  "$ref": "#/definitions/Uint128"
                },
                "position_id": {
                  "$ref": "#/definitions/Uint128"
                },
                "position_owner": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "LPAssetInfo": {
      "type": "object",
      "required": [
        "decimals",
        "info",
        "ratio"
      ],
      "properties": {
        "decimals": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        },
        "ratio": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "PoolInfo": {
      "type": "object",
      "required": [
        "asset_infos",
        "pool_id"
      ],
      "properties": {
        "asset_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LPAssetInfo"
          }
        },
        "pool_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "SupplyCap": {
      "type": "object",
      "required": [
        "asset_info",
        "current_supply",
        "debt_total",
        "lp",
        "supply_cap_ratio"
      ],
      "properties": {
        "asset_info": {
          "$ref": "#/definitions/AssetInfo"
        },
        "current_supply": {
          "$ref": "#/definitions/Uint128"
        },
        "debt_total": {
          "$ref": "#/definitions/Uint128"
        },
        "lp": {
          "type": "boolean"
        },
        "supply_cap_ratio": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "TWAPPoolInfo": {
      "type": "object",
      "required": [
        "base_asset_denom",
        "pool_id",
        "quote_asset_denom"
      ],
      "properties": {
        "base_asset_denom": {
          "type": "string"
        },
        "pool_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "quote_asset_denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "basket_id",
        "position_id",
        "position_owner"
      ],
      "properties": {
        "basket_id": {
          "$ref": "#/definitions/Uint128"
        },
        "position_id": {
          "$ref": "#/definitions/Uint128"
        },
        "position_owner": {
          "type": "string"
        }
      }
    },
    "cAsset": {
      "type": "object",
      "required": [
        "asset",
        "max_LTV",
        "max_borrow_LTV",
        "rate_index"
      ],
      "properties": {
        "asset": {
          "$ref": "#/definitions/Asset"
        },
        "max_LTV": {
          "$ref": "#/definitions/Decimal"
        },
        "max_borrow_LTV": {
          "$ref": "#/definitions/Decimal"
        },
        "pool_info": {
          "anyOf": [
            {
              "$ref": "#/definitions/PoolInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "rate_index": {
          "$ref": "#/definitions/Decimal"
        }
      }
    }
  }
}
